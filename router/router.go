package routers

import (
	handlers "api-game/handler" // üëà ‡πÅ‡∏Å‡πâ‡∏à‡∏≤‡∏Å "Handler" ‡πÄ‡∏õ‡πá‡∏ô "handler" (h ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡πá‡∏Å)
	"api-game/middleware"
	"time"

	"github.com/gin-contrib/cors"
	"github.com/gin-gonic/gin"
	"gorm.io/gorm"
)

// SetupRouter ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ routes ‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏õ
func SetupRouter(r *gin.Engine, db *gorm.DB) {
	r.Static("/uploads", "./uploads")

	// --- ‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á CORS Config (‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç) ---
	config := cors.Config{
		AllowOrigins:     []string{"http://localhost:4200"},
		AllowMethods:     []string{"GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"},
		AllowHeaders:     []string{"Origin", "Content-Type", "Authorization", "authorization"},
		AllowCredentials: true,
		MaxAge:           12 * time.Hour,
	}

	r.Use(cors.New(config))
	// --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á CORS Config ---

	// ---------- Public Routes ----------
	r.POST("/register", func(c *gin.Context) {
		handlers.RegisterHandler(c, db)
	})

	r.POST("/login", func(c *gin.Context) {
		handlers.LoginHandler(c, db)
	})

	// Protected routes
	protected := r.Group("/api")
	protected.Use(middleware.AuthMiddleware())
	{
		protected.PUT("/updateprofile", func(c *gin.Context) {
			handlers.EditProfileHandler(c, db)
		})
		protected.GET("/profile", func(c *gin.Context) {
			handlers.GetProfileHandler(c, db)
		})
	}
}
